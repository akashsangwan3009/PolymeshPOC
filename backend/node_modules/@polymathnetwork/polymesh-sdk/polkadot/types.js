"use strict";
// Auto-generated via `yarn polkadot-types-from-defs`, do not edit
/* eslint-disable */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TxTags = exports.ModuleName = exports.TestUtilsTx = exports.RewardsTx = exports.RelayerTx = exports.ExternalAgentsTx = exports.UtilityTx = exports.TreasuryTx = exports.StoTx = exports.StatisticsTx = exports.SettlementTx = exports.SchedulerTx = exports.ProtocolFeeTx = exports.PortfolioTx = exports.PipsTx = exports.CorporateBallotTx = exports.CorporateActionTx = exports.ComplianceManagerTx = exports.CheckpointTx = exports.CapitalDistributionTx = exports.AssetTx = exports.SudoTx = exports.ImOnlineTx = exports.GrandpaTx = exports.SessionTx = exports.StakingTx = exports.BridgeTx = exports.MultiSigTx = exports.UpgradeCommitteeMembershipTx = exports.UpgradeCommitteeTx = exports.TechnicalCommitteeMembershipTx = exports.TechnicalCommitteeTx = exports.CommitteeMembershipTx = exports.PolymeshCommitteeTx = exports.CddServiceProvidersTx = exports.IdentityTx = exports.BalancesTx = exports.AuthorshipTx = exports.IndicesTx = exports.TimestampTx = exports.BabeTx = exports.SystemTx = void 0;
__exportStar(require("./polymesh/types"), exports);
__exportStar(require("./compliance/types"), exports);
__exportStar(require("./identity/types"), exports);
__exportStar(require("./pips/types"), exports);
__exportStar(require("./protocolFee/types"), exports);
__exportStar(require("./staking/types"), exports);
__exportStar(require("./asset/types"), exports);
var SystemTx;
(function (SystemTx) {
    SystemTx["FillBlock"] = "system.fillBlock";
    SystemTx["Remark"] = "system.remark";
    SystemTx["SetHeapPages"] = "system.setHeapPages";
    SystemTx["SetCode"] = "system.setCode";
    SystemTx["SetCodeWithoutChecks"] = "system.setCodeWithoutChecks";
    SystemTx["SetChangesTrieConfig"] = "system.setChangesTrieConfig";
    SystemTx["SetStorage"] = "system.setStorage";
    SystemTx["KillStorage"] = "system.killStorage";
    SystemTx["KillPrefix"] = "system.killPrefix";
})(SystemTx = exports.SystemTx || (exports.SystemTx = {}));
var BabeTx;
(function (BabeTx) {
    BabeTx["ReportEquivocation"] = "babe.reportEquivocation";
    BabeTx["ReportEquivocationUnsigned"] = "babe.reportEquivocationUnsigned";
})(BabeTx = exports.BabeTx || (exports.BabeTx = {}));
var TimestampTx;
(function (TimestampTx) {
    TimestampTx["Set"] = "timestamp.set";
})(TimestampTx = exports.TimestampTx || (exports.TimestampTx = {}));
var IndicesTx;
(function (IndicesTx) {
    IndicesTx["Claim"] = "indices.claim";
    IndicesTx["Transfer"] = "indices.transfer";
    IndicesTx["Free"] = "indices.free";
    IndicesTx["ForceTransfer"] = "indices.forceTransfer";
    IndicesTx["Freeze"] = "indices.freeze";
})(IndicesTx = exports.IndicesTx || (exports.IndicesTx = {}));
var AuthorshipTx;
(function (AuthorshipTx) {
    AuthorshipTx["SetUncles"] = "authorship.setUncles";
})(AuthorshipTx = exports.AuthorshipTx || (exports.AuthorshipTx = {}));
var BalancesTx;
(function (BalancesTx) {
    BalancesTx["Transfer"] = "balances.transfer";
    BalancesTx["TransferWithMemo"] = "balances.transferWithMemo";
    BalancesTx["DepositBlockRewardReserveBalance"] = "balances.depositBlockRewardReserveBalance";
    BalancesTx["SetBalance"] = "balances.setBalance";
    BalancesTx["ForceTransfer"] = "balances.forceTransfer";
    BalancesTx["BurnAccountBalance"] = "balances.burnAccountBalance";
})(BalancesTx = exports.BalancesTx || (exports.BalancesTx = {}));
var IdentityTx;
(function (IdentityTx) {
    IdentityTx["CddRegisterDid"] = "identity.cddRegisterDid";
    IdentityTx["InvalidateCddClaims"] = "identity.invalidateCddClaims";
    IdentityTx["RemoveSecondaryKeys"] = "identity.removeSecondaryKeys";
    IdentityTx["AcceptPrimaryKey"] = "identity.acceptPrimaryKey";
    IdentityTx["ChangeCddRequirementForMkRotation"] = "identity.changeCddRequirementForMkRotation";
    IdentityTx["JoinIdentityAsKey"] = "identity.joinIdentityAsKey";
    IdentityTx["LeaveIdentityAsKey"] = "identity.leaveIdentityAsKey";
    IdentityTx["AddClaim"] = "identity.addClaim";
    IdentityTx["RevokeClaim"] = "identity.revokeClaim";
    IdentityTx["SetPermissionToSigner"] = "identity.setPermissionToSigner";
    IdentityTx["LegacySetPermissionToSigner"] = "identity.legacySetPermissionToSigner";
    IdentityTx["FreezeSecondaryKeys"] = "identity.freezeSecondaryKeys";
    IdentityTx["UnfreezeSecondaryKeys"] = "identity.unfreezeSecondaryKeys";
    IdentityTx["AddAuthorization"] = "identity.addAuthorization";
    IdentityTx["RemoveAuthorization"] = "identity.removeAuthorization";
    IdentityTx["AddSecondaryKeysWithAuthorization"] = "identity.addSecondaryKeysWithAuthorization";
    IdentityTx["AddInvestorUniquenessClaim"] = "identity.addInvestorUniquenessClaim";
    IdentityTx["GcAddCddClaim"] = "identity.gcAddCddClaim";
    IdentityTx["GcRevokeCddClaim"] = "identity.gcRevokeCddClaim";
    IdentityTx["AddInvestorUniquenessClaimV2"] = "identity.addInvestorUniquenessClaimV2";
    IdentityTx["RevokeClaimByIndex"] = "identity.revokeClaimByIndex";
    IdentityTx["RotatePrimaryKeyToSecondary"] = "identity.rotatePrimaryKeyToSecondary";
})(IdentityTx = exports.IdentityTx || (exports.IdentityTx = {}));
var CddServiceProvidersTx;
(function (CddServiceProvidersTx) {
    CddServiceProvidersTx["SetActiveMembersLimit"] = "cddServiceProviders.setActiveMembersLimit";
    CddServiceProvidersTx["DisableMember"] = "cddServiceProviders.disableMember";
    CddServiceProvidersTx["AddMember"] = "cddServiceProviders.addMember";
    CddServiceProvidersTx["RemoveMember"] = "cddServiceProviders.removeMember";
    CddServiceProvidersTx["SwapMember"] = "cddServiceProviders.swapMember";
    CddServiceProvidersTx["ResetMembers"] = "cddServiceProviders.resetMembers";
    CddServiceProvidersTx["AbdicateMembership"] = "cddServiceProviders.abdicateMembership";
})(CddServiceProvidersTx = exports.CddServiceProvidersTx || (exports.CddServiceProvidersTx = {}));
var PolymeshCommitteeTx;
(function (PolymeshCommitteeTx) {
    PolymeshCommitteeTx["SetVoteThreshold"] = "polymeshCommittee.setVoteThreshold";
    PolymeshCommitteeTx["SetReleaseCoordinator"] = "polymeshCommittee.setReleaseCoordinator";
    PolymeshCommitteeTx["SetExpiresAfter"] = "polymeshCommittee.setExpiresAfter";
    PolymeshCommitteeTx["VoteOrPropose"] = "polymeshCommittee.voteOrPropose";
    PolymeshCommitteeTx["Vote"] = "polymeshCommittee.vote";
})(PolymeshCommitteeTx = exports.PolymeshCommitteeTx || (exports.PolymeshCommitteeTx = {}));
var CommitteeMembershipTx;
(function (CommitteeMembershipTx) {
    CommitteeMembershipTx["SetActiveMembersLimit"] = "committeeMembership.setActiveMembersLimit";
    CommitteeMembershipTx["DisableMember"] = "committeeMembership.disableMember";
    CommitteeMembershipTx["AddMember"] = "committeeMembership.addMember";
    CommitteeMembershipTx["RemoveMember"] = "committeeMembership.removeMember";
    CommitteeMembershipTx["SwapMember"] = "committeeMembership.swapMember";
    CommitteeMembershipTx["ResetMembers"] = "committeeMembership.resetMembers";
    CommitteeMembershipTx["AbdicateMembership"] = "committeeMembership.abdicateMembership";
})(CommitteeMembershipTx = exports.CommitteeMembershipTx || (exports.CommitteeMembershipTx = {}));
var TechnicalCommitteeTx;
(function (TechnicalCommitteeTx) {
    TechnicalCommitteeTx["SetVoteThreshold"] = "technicalCommittee.setVoteThreshold";
    TechnicalCommitteeTx["SetReleaseCoordinator"] = "technicalCommittee.setReleaseCoordinator";
    TechnicalCommitteeTx["SetExpiresAfter"] = "technicalCommittee.setExpiresAfter";
    TechnicalCommitteeTx["VoteOrPropose"] = "technicalCommittee.voteOrPropose";
    TechnicalCommitteeTx["Vote"] = "technicalCommittee.vote";
})(TechnicalCommitteeTx = exports.TechnicalCommitteeTx || (exports.TechnicalCommitteeTx = {}));
var TechnicalCommitteeMembershipTx;
(function (TechnicalCommitteeMembershipTx) {
    TechnicalCommitteeMembershipTx["SetActiveMembersLimit"] = "technicalCommitteeMembership.setActiveMembersLimit";
    TechnicalCommitteeMembershipTx["DisableMember"] = "technicalCommitteeMembership.disableMember";
    TechnicalCommitteeMembershipTx["AddMember"] = "technicalCommitteeMembership.addMember";
    TechnicalCommitteeMembershipTx["RemoveMember"] = "technicalCommitteeMembership.removeMember";
    TechnicalCommitteeMembershipTx["SwapMember"] = "technicalCommitteeMembership.swapMember";
    TechnicalCommitteeMembershipTx["ResetMembers"] = "technicalCommitteeMembership.resetMembers";
    TechnicalCommitteeMembershipTx["AbdicateMembership"] = "technicalCommitteeMembership.abdicateMembership";
})(TechnicalCommitteeMembershipTx = exports.TechnicalCommitteeMembershipTx || (exports.TechnicalCommitteeMembershipTx = {}));
var UpgradeCommitteeTx;
(function (UpgradeCommitteeTx) {
    UpgradeCommitteeTx["SetVoteThreshold"] = "upgradeCommittee.setVoteThreshold";
    UpgradeCommitteeTx["SetReleaseCoordinator"] = "upgradeCommittee.setReleaseCoordinator";
    UpgradeCommitteeTx["SetExpiresAfter"] = "upgradeCommittee.setExpiresAfter";
    UpgradeCommitteeTx["VoteOrPropose"] = "upgradeCommittee.voteOrPropose";
    UpgradeCommitteeTx["Vote"] = "upgradeCommittee.vote";
})(UpgradeCommitteeTx = exports.UpgradeCommitteeTx || (exports.UpgradeCommitteeTx = {}));
var UpgradeCommitteeMembershipTx;
(function (UpgradeCommitteeMembershipTx) {
    UpgradeCommitteeMembershipTx["SetActiveMembersLimit"] = "upgradeCommitteeMembership.setActiveMembersLimit";
    UpgradeCommitteeMembershipTx["DisableMember"] = "upgradeCommitteeMembership.disableMember";
    UpgradeCommitteeMembershipTx["AddMember"] = "upgradeCommitteeMembership.addMember";
    UpgradeCommitteeMembershipTx["RemoveMember"] = "upgradeCommitteeMembership.removeMember";
    UpgradeCommitteeMembershipTx["SwapMember"] = "upgradeCommitteeMembership.swapMember";
    UpgradeCommitteeMembershipTx["ResetMembers"] = "upgradeCommitteeMembership.resetMembers";
    UpgradeCommitteeMembershipTx["AbdicateMembership"] = "upgradeCommitteeMembership.abdicateMembership";
})(UpgradeCommitteeMembershipTx = exports.UpgradeCommitteeMembershipTx || (exports.UpgradeCommitteeMembershipTx = {}));
var MultiSigTx;
(function (MultiSigTx) {
    MultiSigTx["CreateMultisig"] = "multiSig.createMultisig";
    MultiSigTx["CreateOrApproveProposalAsIdentity"] = "multiSig.createOrApproveProposalAsIdentity";
    MultiSigTx["CreateOrApproveProposalAsKey"] = "multiSig.createOrApproveProposalAsKey";
    MultiSigTx["CreateProposalAsIdentity"] = "multiSig.createProposalAsIdentity";
    MultiSigTx["CreateProposalAsKey"] = "multiSig.createProposalAsKey";
    MultiSigTx["ApproveAsIdentity"] = "multiSig.approveAsIdentity";
    MultiSigTx["ApproveAsKey"] = "multiSig.approveAsKey";
    MultiSigTx["RejectAsIdentity"] = "multiSig.rejectAsIdentity";
    MultiSigTx["RejectAsKey"] = "multiSig.rejectAsKey";
    MultiSigTx["AcceptMultisigSignerAsIdentity"] = "multiSig.acceptMultisigSignerAsIdentity";
    MultiSigTx["AcceptMultisigSignerAsKey"] = "multiSig.acceptMultisigSignerAsKey";
    MultiSigTx["AddMultisigSigner"] = "multiSig.addMultisigSigner";
    MultiSigTx["RemoveMultisigSigner"] = "multiSig.removeMultisigSigner";
    MultiSigTx["AddMultisigSignersViaCreator"] = "multiSig.addMultisigSignersViaCreator";
    MultiSigTx["RemoveMultisigSignersViaCreator"] = "multiSig.removeMultisigSignersViaCreator";
    MultiSigTx["ChangeSigsRequired"] = "multiSig.changeSigsRequired";
    MultiSigTx["MakeMultisigSigner"] = "multiSig.makeMultisigSigner";
    MultiSigTx["MakeMultisigPrimary"] = "multiSig.makeMultisigPrimary";
    MultiSigTx["ExecuteScheduledProposal"] = "multiSig.executeScheduledProposal";
})(MultiSigTx = exports.MultiSigTx || (exports.MultiSigTx = {}));
var BridgeTx;
(function (BridgeTx) {
    BridgeTx["ChangeController"] = "bridge.changeController";
    BridgeTx["ChangeAdmin"] = "bridge.changeAdmin";
    BridgeTx["ChangeTimelock"] = "bridge.changeTimelock";
    BridgeTx["Freeze"] = "bridge.freeze";
    BridgeTx["Unfreeze"] = "bridge.unfreeze";
    BridgeTx["ChangeBridgeLimit"] = "bridge.changeBridgeLimit";
    BridgeTx["ChangeBridgeExempted"] = "bridge.changeBridgeExempted";
    BridgeTx["ForceHandleBridgeTx"] = "bridge.forceHandleBridgeTx";
    BridgeTx["BatchProposeBridgeTx"] = "bridge.batchProposeBridgeTx";
    BridgeTx["ProposeBridgeTx"] = "bridge.proposeBridgeTx";
    BridgeTx["HandleBridgeTx"] = "bridge.handleBridgeTx";
    BridgeTx["FreezeTxs"] = "bridge.freezeTxs";
    BridgeTx["UnfreezeTxs"] = "bridge.unfreezeTxs";
    BridgeTx["HandleScheduledBridgeTx"] = "bridge.handleScheduledBridgeTx";
    BridgeTx["AddFreezeAdmin"] = "bridge.addFreezeAdmin";
    BridgeTx["RemoveFreezeAdmin"] = "bridge.removeFreezeAdmin";
    BridgeTx["RemoveTxs"] = "bridge.removeTxs";
})(BridgeTx = exports.BridgeTx || (exports.BridgeTx = {}));
var StakingTx;
(function (StakingTx) {
    StakingTx["Bond"] = "staking.bond";
    StakingTx["BondExtra"] = "staking.bondExtra";
    StakingTx["Unbond"] = "staking.unbond";
    StakingTx["WithdrawUnbonded"] = "staking.withdrawUnbonded";
    StakingTx["Validate"] = "staking.validate";
    StakingTx["Nominate"] = "staking.nominate";
    StakingTx["Chill"] = "staking.chill";
    StakingTx["SetPayee"] = "staking.setPayee";
    StakingTx["SetController"] = "staking.setController";
    StakingTx["SetValidatorCount"] = "staking.setValidatorCount";
    StakingTx["IncreaseValidatorCount"] = "staking.increaseValidatorCount";
    StakingTx["ScaleValidatorCount"] = "staking.scaleValidatorCount";
    StakingTx["AddPermissionedValidator"] = "staking.addPermissionedValidator";
    StakingTx["RemovePermissionedValidator"] = "staking.removePermissionedValidator";
    StakingTx["ValidateCddExpiryNominators"] = "staking.validateCddExpiryNominators";
    StakingTx["SetCommissionCap"] = "staking.setCommissionCap";
    StakingTx["SetMinBondThreshold"] = "staking.setMinBondThreshold";
    StakingTx["ForceNoEras"] = "staking.forceNoEras";
    StakingTx["ForceNewEra"] = "staking.forceNewEra";
    StakingTx["SetInvulnerables"] = "staking.setInvulnerables";
    StakingTx["ForceUnstake"] = "staking.forceUnstake";
    StakingTx["ForceNewEraAlways"] = "staking.forceNewEraAlways";
    StakingTx["CancelDeferredSlash"] = "staking.cancelDeferredSlash";
    StakingTx["PayoutStakers"] = "staking.payoutStakers";
    StakingTx["Rebond"] = "staking.rebond";
    StakingTx["SetHistoryDepth"] = "staking.setHistoryDepth";
    StakingTx["ReapStash"] = "staking.reapStash";
    StakingTx["SubmitElectionSolution"] = "staking.submitElectionSolution";
    StakingTx["SubmitElectionSolutionUnsigned"] = "staking.submitElectionSolutionUnsigned";
    StakingTx["PayoutStakersBySystem"] = "staking.payoutStakersBySystem";
    StakingTx["ChangeSlashingAllowedFor"] = "staking.changeSlashingAllowedFor";
    StakingTx["UpdatePermissionedValidatorIntendedCount"] = "staking.updatePermissionedValidatorIntendedCount";
})(StakingTx = exports.StakingTx || (exports.StakingTx = {}));
var SessionTx;
(function (SessionTx) {
    SessionTx["SetKeys"] = "session.setKeys";
    SessionTx["PurgeKeys"] = "session.purgeKeys";
})(SessionTx = exports.SessionTx || (exports.SessionTx = {}));
var GrandpaTx;
(function (GrandpaTx) {
    GrandpaTx["ReportEquivocation"] = "grandpa.reportEquivocation";
    GrandpaTx["ReportEquivocationUnsigned"] = "grandpa.reportEquivocationUnsigned";
    GrandpaTx["NoteStalled"] = "grandpa.noteStalled";
})(GrandpaTx = exports.GrandpaTx || (exports.GrandpaTx = {}));
var ImOnlineTx;
(function (ImOnlineTx) {
    ImOnlineTx["Heartbeat"] = "imOnline.heartbeat";
})(ImOnlineTx = exports.ImOnlineTx || (exports.ImOnlineTx = {}));
var SudoTx;
(function (SudoTx) {
    SudoTx["Sudo"] = "sudo.sudo";
    SudoTx["SudoUncheckedWeight"] = "sudo.sudoUncheckedWeight";
    SudoTx["SetKey"] = "sudo.setKey";
    SudoTx["SudoAs"] = "sudo.sudoAs";
})(SudoTx = exports.SudoTx || (exports.SudoTx = {}));
var AssetTx;
(function (AssetTx) {
    AssetTx["RegisterTicker"] = "asset.registerTicker";
    AssetTx["AcceptTickerTransfer"] = "asset.acceptTickerTransfer";
    AssetTx["AcceptAssetOwnershipTransfer"] = "asset.acceptAssetOwnershipTransfer";
    AssetTx["CreateAsset"] = "asset.createAsset";
    AssetTx["Freeze"] = "asset.freeze";
    AssetTx["Unfreeze"] = "asset.unfreeze";
    AssetTx["RenameAsset"] = "asset.renameAsset";
    AssetTx["Issue"] = "asset.issue";
    AssetTx["Redeem"] = "asset.redeem";
    AssetTx["MakeDivisible"] = "asset.makeDivisible";
    AssetTx["AddDocuments"] = "asset.addDocuments";
    AssetTx["RemoveDocuments"] = "asset.removeDocuments";
    AssetTx["SetFundingRound"] = "asset.setFundingRound";
    AssetTx["UpdateIdentifiers"] = "asset.updateIdentifiers";
    AssetTx["ClaimClassicTicker"] = "asset.claimClassicTicker";
    AssetTx["ReserveClassicTicker"] = "asset.reserveClassicTicker";
    AssetTx["ControllerTransfer"] = "asset.controllerTransfer";
    AssetTx["RegisterCustomAssetType"] = "asset.registerCustomAssetType";
})(AssetTx = exports.AssetTx || (exports.AssetTx = {}));
var CapitalDistributionTx;
(function (CapitalDistributionTx) {
    CapitalDistributionTx["Distribute"] = "capitalDistribution.distribute";
    CapitalDistributionTx["Claim"] = "capitalDistribution.claim";
    CapitalDistributionTx["PushBenefit"] = "capitalDistribution.pushBenefit";
    CapitalDistributionTx["Reclaim"] = "capitalDistribution.reclaim";
    CapitalDistributionTx["RemoveDistribution"] = "capitalDistribution.removeDistribution";
})(CapitalDistributionTx = exports.CapitalDistributionTx || (exports.CapitalDistributionTx = {}));
var CheckpointTx;
(function (CheckpointTx) {
    CheckpointTx["CreateCheckpoint"] = "checkpoint.createCheckpoint";
    CheckpointTx["SetSchedulesMaxComplexity"] = "checkpoint.setSchedulesMaxComplexity";
    CheckpointTx["CreateSchedule"] = "checkpoint.createSchedule";
    CheckpointTx["RemoveSchedule"] = "checkpoint.removeSchedule";
})(CheckpointTx = exports.CheckpointTx || (exports.CheckpointTx = {}));
var ComplianceManagerTx;
(function (ComplianceManagerTx) {
    ComplianceManagerTx["AddComplianceRequirement"] = "complianceManager.addComplianceRequirement";
    ComplianceManagerTx["RemoveComplianceRequirement"] = "complianceManager.removeComplianceRequirement";
    ComplianceManagerTx["ReplaceAssetCompliance"] = "complianceManager.replaceAssetCompliance";
    ComplianceManagerTx["ResetAssetCompliance"] = "complianceManager.resetAssetCompliance";
    ComplianceManagerTx["PauseAssetCompliance"] = "complianceManager.pauseAssetCompliance";
    ComplianceManagerTx["ResumeAssetCompliance"] = "complianceManager.resumeAssetCompliance";
    ComplianceManagerTx["AddDefaultTrustedClaimIssuer"] = "complianceManager.addDefaultTrustedClaimIssuer";
    ComplianceManagerTx["RemoveDefaultTrustedClaimIssuer"] = "complianceManager.removeDefaultTrustedClaimIssuer";
    ComplianceManagerTx["ChangeComplianceRequirement"] = "complianceManager.changeComplianceRequirement";
})(ComplianceManagerTx = exports.ComplianceManagerTx || (exports.ComplianceManagerTx = {}));
var CorporateActionTx;
(function (CorporateActionTx) {
    CorporateActionTx["SetMaxDetailsLength"] = "corporateAction.setMaxDetailsLength";
    CorporateActionTx["SetDefaultTargets"] = "corporateAction.setDefaultTargets";
    CorporateActionTx["SetDefaultWithholdingTax"] = "corporateAction.setDefaultWithholdingTax";
    CorporateActionTx["SetDidWithholdingTax"] = "corporateAction.setDidWithholdingTax";
    CorporateActionTx["InitiateCorporateAction"] = "corporateAction.initiateCorporateAction";
    CorporateActionTx["LinkCaDoc"] = "corporateAction.linkCaDoc";
    CorporateActionTx["RemoveCa"] = "corporateAction.removeCa";
    CorporateActionTx["ChangeRecordDate"] = "corporateAction.changeRecordDate";
})(CorporateActionTx = exports.CorporateActionTx || (exports.CorporateActionTx = {}));
var CorporateBallotTx;
(function (CorporateBallotTx) {
    CorporateBallotTx["AttachBallot"] = "corporateBallot.attachBallot";
    CorporateBallotTx["Vote"] = "corporateBallot.vote";
    CorporateBallotTx["ChangeEnd"] = "corporateBallot.changeEnd";
    CorporateBallotTx["ChangeMeta"] = "corporateBallot.changeMeta";
    CorporateBallotTx["ChangeRcv"] = "corporateBallot.changeRcv";
    CorporateBallotTx["RemoveBallot"] = "corporateBallot.removeBallot";
})(CorporateBallotTx = exports.CorporateBallotTx || (exports.CorporateBallotTx = {}));
var PipsTx;
(function (PipsTx) {
    PipsTx["SetPruneHistoricalPips"] = "pips.setPruneHistoricalPips";
    PipsTx["SetMinProposalDeposit"] = "pips.setMinProposalDeposit";
    PipsTx["SetDefaultEnactmentPeriod"] = "pips.setDefaultEnactmentPeriod";
    PipsTx["SetPendingPipExpiry"] = "pips.setPendingPipExpiry";
    PipsTx["SetMaxPipSkipCount"] = "pips.setMaxPipSkipCount";
    PipsTx["SetActivePipLimit"] = "pips.setActivePipLimit";
    PipsTx["Propose"] = "pips.propose";
    PipsTx["Vote"] = "pips.vote";
    PipsTx["ApproveCommitteeProposal"] = "pips.approveCommitteeProposal";
    PipsTx["RejectProposal"] = "pips.rejectProposal";
    PipsTx["PruneProposal"] = "pips.pruneProposal";
    PipsTx["RescheduleExecution"] = "pips.rescheduleExecution";
    PipsTx["ClearSnapshot"] = "pips.clearSnapshot";
    PipsTx["Snapshot"] = "pips.snapshot";
    PipsTx["EnactSnapshotResults"] = "pips.enactSnapshotResults";
    PipsTx["ExecuteScheduledPip"] = "pips.executeScheduledPip";
    PipsTx["ExpireScheduledPip"] = "pips.expireScheduledPip";
})(PipsTx = exports.PipsTx || (exports.PipsTx = {}));
var PortfolioTx;
(function (PortfolioTx) {
    PortfolioTx["CreatePortfolio"] = "portfolio.createPortfolio";
    PortfolioTx["DeletePortfolio"] = "portfolio.deletePortfolio";
    PortfolioTx["MovePortfolioFunds"] = "portfolio.movePortfolioFunds";
    PortfolioTx["RenamePortfolio"] = "portfolio.renamePortfolio";
    PortfolioTx["QuitPortfolioCustody"] = "portfolio.quitPortfolioCustody";
    PortfolioTx["AcceptPortfolioCustody"] = "portfolio.acceptPortfolioCustody";
})(PortfolioTx = exports.PortfolioTx || (exports.PortfolioTx = {}));
var ProtocolFeeTx;
(function (ProtocolFeeTx) {
    ProtocolFeeTx["ChangeCoefficient"] = "protocolFee.changeCoefficient";
    ProtocolFeeTx["ChangeBaseFee"] = "protocolFee.changeBaseFee";
})(ProtocolFeeTx = exports.ProtocolFeeTx || (exports.ProtocolFeeTx = {}));
var SchedulerTx;
(function (SchedulerTx) {
    SchedulerTx["Schedule"] = "scheduler.schedule";
    SchedulerTx["Cancel"] = "scheduler.cancel";
    SchedulerTx["ScheduleNamed"] = "scheduler.scheduleNamed";
    SchedulerTx["CancelNamed"] = "scheduler.cancelNamed";
    SchedulerTx["ScheduleAfter"] = "scheduler.scheduleAfter";
    SchedulerTx["ScheduleNamedAfter"] = "scheduler.scheduleNamedAfter";
})(SchedulerTx = exports.SchedulerTx || (exports.SchedulerTx = {}));
var SettlementTx;
(function (SettlementTx) {
    SettlementTx["CreateVenue"] = "settlement.createVenue";
    SettlementTx["UpdateVenueDetails"] = "settlement.updateVenueDetails";
    SettlementTx["UpdateVenueType"] = "settlement.updateVenueType";
    SettlementTx["AddInstruction"] = "settlement.addInstruction";
    SettlementTx["AddAndAffirmInstruction"] = "settlement.addAndAffirmInstruction";
    SettlementTx["AffirmInstruction"] = "settlement.affirmInstruction";
    SettlementTx["WithdrawAffirmation"] = "settlement.withdrawAffirmation";
    SettlementTx["RejectInstruction"] = "settlement.rejectInstruction";
    SettlementTx["AffirmWithReceipts"] = "settlement.affirmWithReceipts";
    SettlementTx["ClaimReceipt"] = "settlement.claimReceipt";
    SettlementTx["UnclaimReceipt"] = "settlement.unclaimReceipt";
    SettlementTx["SetVenueFiltering"] = "settlement.setVenueFiltering";
    SettlementTx["AllowVenues"] = "settlement.allowVenues";
    SettlementTx["DisallowVenues"] = "settlement.disallowVenues";
    SettlementTx["ChangeReceiptValidity"] = "settlement.changeReceiptValidity";
    SettlementTx["ExecuteScheduledInstruction"] = "settlement.executeScheduledInstruction";
    SettlementTx["RescheduleInstruction"] = "settlement.rescheduleInstruction";
})(SettlementTx = exports.SettlementTx || (exports.SettlementTx = {}));
var StatisticsTx;
(function (StatisticsTx) {
    StatisticsTx["AddTransferManager"] = "statistics.addTransferManager";
    StatisticsTx["RemoveTransferManager"] = "statistics.removeTransferManager";
    StatisticsTx["AddExemptedEntities"] = "statistics.addExemptedEntities";
    StatisticsTx["RemoveExemptedEntities"] = "statistics.removeExemptedEntities";
})(StatisticsTx = exports.StatisticsTx || (exports.StatisticsTx = {}));
var StoTx;
(function (StoTx) {
    StoTx["CreateFundraiser"] = "sto.createFundraiser";
    StoTx["Invest"] = "sto.invest";
    StoTx["FreezeFundraiser"] = "sto.freezeFundraiser";
    StoTx["UnfreezeFundraiser"] = "sto.unfreezeFundraiser";
    StoTx["ModifyFundraiserWindow"] = "sto.modifyFundraiserWindow";
    StoTx["Stop"] = "sto.stop";
})(StoTx = exports.StoTx || (exports.StoTx = {}));
var TreasuryTx;
(function (TreasuryTx) {
    TreasuryTx["Disbursement"] = "treasury.disbursement";
    TreasuryTx["Reimbursement"] = "treasury.reimbursement";
})(TreasuryTx = exports.TreasuryTx || (exports.TreasuryTx = {}));
var UtilityTx;
(function (UtilityTx) {
    UtilityTx["Batch"] = "utility.batch";
    UtilityTx["BatchAtomic"] = "utility.batchAtomic";
    UtilityTx["BatchOptimistic"] = "utility.batchOptimistic";
    UtilityTx["RelayTx"] = "utility.relayTx";
})(UtilityTx = exports.UtilityTx || (exports.UtilityTx = {}));
var ExternalAgentsTx;
(function (ExternalAgentsTx) {
    ExternalAgentsTx["CreateGroup"] = "externalAgents.createGroup";
    ExternalAgentsTx["SetGroupPermissions"] = "externalAgents.setGroupPermissions";
    ExternalAgentsTx["RemoveAgent"] = "externalAgents.removeAgent";
    ExternalAgentsTx["Abdicate"] = "externalAgents.abdicate";
    ExternalAgentsTx["ChangeGroup"] = "externalAgents.changeGroup";
    ExternalAgentsTx["AcceptBecomeAgent"] = "externalAgents.acceptBecomeAgent";
})(ExternalAgentsTx = exports.ExternalAgentsTx || (exports.ExternalAgentsTx = {}));
var RelayerTx;
(function (RelayerTx) {
    RelayerTx["SetPayingKey"] = "relayer.setPayingKey";
    RelayerTx["AcceptPayingKey"] = "relayer.acceptPayingKey";
    RelayerTx["RemovePayingKey"] = "relayer.removePayingKey";
    RelayerTx["UpdatePolyxLimit"] = "relayer.updatePolyxLimit";
    RelayerTx["IncreasePolyxLimit"] = "relayer.increasePolyxLimit";
    RelayerTx["DecreasePolyxLimit"] = "relayer.decreasePolyxLimit";
})(RelayerTx = exports.RelayerTx || (exports.RelayerTx = {}));
var RewardsTx;
(function (RewardsTx) {
    RewardsTx["ClaimItnReward"] = "rewards.claimItnReward";
    RewardsTx["SetItnRewardStatus"] = "rewards.setItnRewardStatus";
})(RewardsTx = exports.RewardsTx || (exports.RewardsTx = {}));
var TestUtilsTx;
(function (TestUtilsTx) {
    TestUtilsTx["RegisterDid"] = "testUtils.registerDid";
    TestUtilsTx["MockCddRegisterDid"] = "testUtils.mockCddRegisterDid";
    TestUtilsTx["GetMyDid"] = "testUtils.getMyDid";
    TestUtilsTx["GetCddOf"] = "testUtils.getCddOf";
})(TestUtilsTx = exports.TestUtilsTx || (exports.TestUtilsTx = {}));
var ModuleName;
(function (ModuleName) {
    ModuleName["System"] = "system";
    ModuleName["Babe"] = "babe";
    ModuleName["Timestamp"] = "timestamp";
    ModuleName["Indices"] = "indices";
    ModuleName["Authorship"] = "authorship";
    ModuleName["Balances"] = "balances";
    ModuleName["Identity"] = "identity";
    ModuleName["CddServiceProviders"] = "cddServiceProviders";
    ModuleName["PolymeshCommittee"] = "polymeshCommittee";
    ModuleName["CommitteeMembership"] = "committeeMembership";
    ModuleName["TechnicalCommittee"] = "technicalCommittee";
    ModuleName["TechnicalCommitteeMembership"] = "technicalCommitteeMembership";
    ModuleName["UpgradeCommittee"] = "upgradeCommittee";
    ModuleName["UpgradeCommitteeMembership"] = "upgradeCommitteeMembership";
    ModuleName["MultiSig"] = "multiSig";
    ModuleName["Bridge"] = "bridge";
    ModuleName["Staking"] = "staking";
    ModuleName["Session"] = "session";
    ModuleName["Grandpa"] = "grandpa";
    ModuleName["ImOnline"] = "imOnline";
    ModuleName["Sudo"] = "sudo";
    ModuleName["Asset"] = "asset";
    ModuleName["CapitalDistribution"] = "capitalDistribution";
    ModuleName["Checkpoint"] = "checkpoint";
    ModuleName["ComplianceManager"] = "complianceManager";
    ModuleName["CorporateAction"] = "corporateAction";
    ModuleName["CorporateBallot"] = "corporateBallot";
    ModuleName["Pips"] = "pips";
    ModuleName["Portfolio"] = "portfolio";
    ModuleName["ProtocolFee"] = "protocolFee";
    ModuleName["Scheduler"] = "scheduler";
    ModuleName["Settlement"] = "settlement";
    ModuleName["Statistics"] = "statistics";
    ModuleName["Sto"] = "sto";
    ModuleName["Treasury"] = "treasury";
    ModuleName["Utility"] = "utility";
    ModuleName["ExternalAgents"] = "externalAgents";
    ModuleName["Relayer"] = "relayer";
    ModuleName["Rewards"] = "rewards";
    ModuleName["TestUtils"] = "testUtils";
})(ModuleName = exports.ModuleName || (exports.ModuleName = {}));
exports.TxTags = {
    system: SystemTx,
    babe: BabeTx,
    timestamp: TimestampTx,
    indices: IndicesTx,
    authorship: AuthorshipTx,
    balances: BalancesTx,
    identity: IdentityTx,
    cddServiceProviders: CddServiceProvidersTx,
    polymeshCommittee: PolymeshCommitteeTx,
    committeeMembership: CommitteeMembershipTx,
    technicalCommittee: TechnicalCommitteeTx,
    technicalCommitteeMembership: TechnicalCommitteeMembershipTx,
    upgradeCommittee: UpgradeCommitteeTx,
    upgradeCommitteeMembership: UpgradeCommitteeMembershipTx,
    multiSig: MultiSigTx,
    bridge: BridgeTx,
    staking: StakingTx,
    session: SessionTx,
    grandpa: GrandpaTx,
    imOnline: ImOnlineTx,
    sudo: SudoTx,
    asset: AssetTx,
    capitalDistribution: CapitalDistributionTx,
    checkpoint: CheckpointTx,
    complianceManager: ComplianceManagerTx,
    corporateAction: CorporateActionTx,
    corporateBallot: CorporateBallotTx,
    pips: PipsTx,
    portfolio: PortfolioTx,
    protocolFee: ProtocolFeeTx,
    scheduler: SchedulerTx,
    settlement: SettlementTx,
    statistics: StatisticsTx,
    sto: StoTx,
    treasury: TreasuryTx,
    utility: UtilityTx,
    externalAgents: ExternalAgentsTx,
    relayer: RelayerTx,
    rewards: RewardsTx,
    testUtils: TestUtilsTx,
};
//# sourceMappingURL=types.js.map