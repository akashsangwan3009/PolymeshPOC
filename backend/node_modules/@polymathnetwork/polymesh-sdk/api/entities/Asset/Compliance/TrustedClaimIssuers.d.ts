import { Asset, Context, ModifyAssetTrustedClaimIssuersAddSetParams, ModifyAssetTrustedClaimIssuersRemoveParams, Namespace } from "../../../../internal";
import { ProcedureMethod, SubCallback, TrustedClaimIssuer, UnsubCallback } from "../../../../types";
/**
 * Handles all Asset Default Trusted Claim Issuers related functionality
 */
export declare class TrustedClaimIssuers extends Namespace<Asset> {
    /**
     * @hidden
     */
    constructor(parent: Asset, context: Context);
    /**
     * Assign a new default list of trusted claim issuers to the Asset by replacing the existing ones with the list passed as a parameter
     *
     * This requires two transactions
     */
    set: ProcedureMethod<ModifyAssetTrustedClaimIssuersAddSetParams, Asset>;
    /**
     * Add the supplied Identities to the Asset's list of trusted claim issuers
     */
    add: ProcedureMethod<ModifyAssetTrustedClaimIssuersAddSetParams, Asset>;
    /**
     * Remove the supplied Identities from the Asset's list of trusted claim issuers   *
     */
    remove: ProcedureMethod<ModifyAssetTrustedClaimIssuersRemoveParams, Asset>;
    /**
     * Retrieve the current Default Trusted Claim Issuers of the Asset
     *
     * @note can be subscribed to
     */
    get(): Promise<TrustedClaimIssuer<true>[]>;
    get(callback: SubCallback<TrustedClaimIssuer<true>[]>): Promise<UnsubCallback>;
}
//# sourceMappingURL=TrustedClaimIssuers.d.ts.map