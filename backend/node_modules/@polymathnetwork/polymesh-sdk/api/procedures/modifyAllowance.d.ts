import BigNumber from 'bignumber.js';
import { Procedure, Subsidy } from "../../internal";
import { AllowanceOperation, ProcedureAuthorization } from "../../types/internal";
export interface IncreaseAllowanceParams {
    /**
     * amount of POLYX to increase the allowance by
     */
    allowance: BigNumber;
    operation: AllowanceOperation.Increase;
}
export interface DecreaseAllowanceParams {
    /**
     * amount of POLYX to decrease the allowance by
     */
    allowance: BigNumber;
    operation: AllowanceOperation.Decrease;
}
export interface SetAllowanceParams {
    /**
     * amount of POLYX to set the allowance to
     */
    allowance: BigNumber;
    operation: AllowanceOperation.Set;
}
export declare type ModifyAllowanceParams = (IncreaseAllowanceParams | DecreaseAllowanceParams | SetAllowanceParams) & {
    subsidy: Subsidy;
};
/**
 * @hidden
 */
export declare function prepareModifyAllowance(this: Procedure<ModifyAllowanceParams, void>, args: ModifyAllowanceParams): Promise<void>;
/**
 * @hidden
 *
 * To modify the allowance for a Subsidy, the caller must be the subsidizer
 */
export declare function getAuthorization(this: Procedure<ModifyAllowanceParams, void>, args: ModifyAllowanceParams): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const modifyAllowance: () => Procedure<ModifyAllowanceParams, void>;
//# sourceMappingURL=modifyAllowance.d.ts.map