import { ISubmittableResult } from '@polkadot/types/types';
import { Account, Context, Identity, PostTransactionValue, Procedure } from "../../internal";
import { PermissionedAccount, PermissionsLike } from "../../types";
import { Modify } from "../../types/utils";
export interface RegisterIdentityParams {
    targetAccount: string | Account;
    secondaryAccounts?: Modify<PermissionedAccount, {
        permissions: PermissionsLike;
    }>[];
}
/**
 * @hidden
 */
export declare const createRegisterIdentityResolver: (context: Context) => (receipt: ISubmittableResult) => Identity;
/**
 * @hidden
 */
export declare function prepareRegisterIdentity(this: Procedure<RegisterIdentityParams, Identity>, args: RegisterIdentityParams): Promise<PostTransactionValue<Identity>>;
/**
 * @hidden
 */
export declare const registerIdentity: () => Procedure<RegisterIdentityParams, Identity>;
//# sourceMappingURL=registerIdentity.d.ts.map