import BigNumber from 'bignumber.js';
import { Procedure } from "../../internal";
import { InputCondition } from "../../types";
import { ProcedureAuthorization } from "../../types/internal";
export declare type ModifyComplianceRequirementParams = {
    /**
     * ID of the Compliance Requirement
     */
    id: BigNumber;
    /**
     * array of conditions to replace the existing array of conditions for the requirement (identified by `id`).
     *   Conditions within a requirement are *AND* between them. This means that in order
     *   for a transfer to comply with this requirement, it must fulfill *ALL* conditions
     */
    conditions: InputCondition[];
};
/**
 * @hidden
 */
export declare type Params = ModifyComplianceRequirementParams & {
    ticker: string;
};
/**
 * @hidden
 */
export declare function prepareModifyComplianceRequirement(this: Procedure<Params, void>, args: Params): Promise<void>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, void>, { ticker }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const modifyComplianceRequirement: () => Procedure<Params, void>;
//# sourceMappingURL=modifyComplianceRequirement.d.ts.map