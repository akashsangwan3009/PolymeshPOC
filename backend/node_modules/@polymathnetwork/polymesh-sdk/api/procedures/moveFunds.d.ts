import BigNumber from 'bignumber.js';
import { DefaultPortfolio, NumberedPortfolio, Procedure } from "../../internal";
import { PortfolioMovement } from "../../types";
import { ProcedureAuthorization } from "../../types/internal";
export interface MoveFundsParams {
    /**
     * portfolio (or portfolio ID) that will receive the funds. Optional, if no value is passed, the funds will be moved to the default Portfolio of this Portfolio's owner
     */
    to?: BigNumber | DefaultPortfolio | NumberedPortfolio;
    /**
     * list of Assets (and the corresponding token amounts) that will be moved
     */
    items: PortfolioMovement[];
}
/**
 * @hidden
 */
export declare type Params = MoveFundsParams & {
    from: DefaultPortfolio | NumberedPortfolio;
};
/**
 * @hidden
 */
export declare function prepareMoveFunds(this: Procedure<Params, void>, args: Params): Promise<void>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params>, { from, to }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const moveFunds: () => Procedure<Params, void>;
//# sourceMappingURL=moveFunds.d.ts.map