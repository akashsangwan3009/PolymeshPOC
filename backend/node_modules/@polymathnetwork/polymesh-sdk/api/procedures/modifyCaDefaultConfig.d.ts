import BigNumber from 'bignumber.js';
import { Procedure } from "../../internal";
import { InputTargets, InputTaxWithholding } from "../../types";
import { ProcedureAuthorization } from "../../types/internal";
export declare type ModifyCaDefaultConfigParams = {
    targets?: InputTargets;
    defaultTaxWithholding: BigNumber;
    taxWithholdings?: InputTaxWithholding[];
} | {
    targets: InputTargets;
    defaultTaxWithholding?: BigNumber;
    taxWithholdings?: InputTaxWithholding[];
} | {
    targets?: InputTargets;
    defaultTaxWithholding?: BigNumber;
    taxWithholdings: InputTaxWithholding[];
};
/**
 * @hidden
 */
export declare type Params = {
    ticker: string;
} & ModifyCaDefaultConfigParams;
/**
 * @hidden
 */
export declare function prepareModifyCaDefaultConfig(this: Procedure<Params, void>, args: Params): Promise<void>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, void>, { ticker, targets, defaultTaxWithholding, taxWithholdings }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const modifyCaDefaultConfig: () => Procedure<Params, void>;
//# sourceMappingURL=modifyCaDefaultConfig.d.ts.map