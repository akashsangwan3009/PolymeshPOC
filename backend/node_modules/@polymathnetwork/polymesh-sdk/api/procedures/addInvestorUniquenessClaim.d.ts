import { Procedure } from "../../internal";
import { Scope } from "../../types";
import { ProcedureAuthorization, ScopeClaimProof } from "../../types/internal";
export interface AddInvestorUniquenessClaimParams {
    scope: Scope;
    cddId: string;
    proof: string | ScopeClaimProof;
    scopeId: string;
    expiry?: Date;
}
/**
 * @hidden
 */
export declare function prepareAddInvestorUniquenessClaim(this: Procedure<AddInvestorUniquenessClaimParams, void>, args: AddInvestorUniquenessClaimParams): Promise<void>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<AddInvestorUniquenessClaimParams>, { proof }: AddInvestorUniquenessClaimParams): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const addInvestorUniquenessClaim: () => Procedure<AddInvestorUniquenessClaimParams, void>;
//# sourceMappingURL=addInvestorUniquenessClaim.d.ts.map