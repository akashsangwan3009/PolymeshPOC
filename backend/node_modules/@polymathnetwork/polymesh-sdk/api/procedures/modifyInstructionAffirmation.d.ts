import BigNumber from 'bignumber.js';
import { Instruction, Procedure } from "../../internal";
import { DefaultPortfolio, NumberedPortfolio } from "../../types";
import { InstructionAffirmationOperation, ProcedureAuthorization } from "../../types/internal";
export interface AffirmInstructionParams {
    id: BigNumber;
}
export interface ModifyInstructionAffirmationParams {
    id: BigNumber;
    operation: InstructionAffirmationOperation;
}
export interface Storage {
    portfolios: (DefaultPortfolio | NumberedPortfolio)[];
    senderLegAmount: BigNumber;
    totalLegAmount: BigNumber;
}
/**
 * @hidden
 */
export declare function prepareModifyInstructionAffirmation(this: Procedure<ModifyInstructionAffirmationParams, Instruction, Storage>, args: ModifyInstructionAffirmationParams): Promise<Instruction>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<ModifyInstructionAffirmationParams, Instruction, Storage>, { operation }: ModifyInstructionAffirmationParams): Promise<ProcedureAuthorization>;
/**
 * @hidden
 */
export declare function prepareStorage(this: Procedure<ModifyInstructionAffirmationParams, Instruction, Storage>, { id }: ModifyInstructionAffirmationParams): Promise<Storage>;
/**
 * @hidden
 */
export declare const modifyInstructionAffirmation: () => Procedure<ModifyInstructionAffirmationParams, Instruction, Storage>;
//# sourceMappingURL=modifyInstructionAffirmation.d.ts.map