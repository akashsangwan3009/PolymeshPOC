import { Procedure, Subsidy } from "../../internal";
import { ProcedureAuthorization } from "../../types/internal";
export interface QuitSubsidyParams {
    subsidy: Subsidy;
}
/**
 * @hidden
 */
export declare function prepareQuitSubsidy(this: Procedure<QuitSubsidyParams, void>, args: QuitSubsidyParams): Promise<void>;
/**
 * @hidden
 *
 * To quit a Subsidy, the caller should be either the beneficiary or the subsidizer
 */
export declare function getAuthorization(this: Procedure<QuitSubsidyParams, void>, args: QuitSubsidyParams): Promise<ProcedureAuthorization>;
/**
 * @hidden
 */
export declare const quitSubsidy: () => Procedure<QuitSubsidyParams, void>;
//# sourceMappingURL=quitSubsidy.d.ts.map