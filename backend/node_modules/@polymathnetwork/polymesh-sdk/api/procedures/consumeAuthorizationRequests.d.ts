import { AuthorizationRequest, Procedure } from "../../internal";
import { ProcedureAuthorization } from "../../types/internal";
export interface ConsumeParams {
    accept: boolean;
}
/**
 * @hidden
 */
export declare type ConsumeAuthorizationRequestsParams = ConsumeParams & {
    authRequests: AuthorizationRequest[];
};
/**
 * @hidden
 */
export declare function prepareConsumeAuthorizationRequests(this: Procedure<ConsumeAuthorizationRequestsParams>, args: ConsumeAuthorizationRequestsParams): Promise<void>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<ConsumeAuthorizationRequestsParams>, { authRequests, accept }: ConsumeAuthorizationRequestsParams): Promise<ProcedureAuthorization>;
/**
 * @hidden
 */
export declare const consumeAuthorizationRequests: () => Procedure<ConsumeAuthorizationRequestsParams>;
//# sourceMappingURL=consumeAuthorizationRequests.d.ts.map