import { AuthorizationRequest, Identity, PostTransactionValue, Procedure } from "../../internal";
import { ProcedureAuthorization } from "../../types/internal";
export interface TransferTickerOwnershipParams {
    target: string | Identity;
    /**
     * date at which the authorization request for transfer expires (optional)
     */
    expiry?: Date;
}
/**
 * @hidden
 */
export declare type Params = {
    ticker: string;
} & TransferTickerOwnershipParams;
/**
 * @hidden
 */
export declare function prepareTransferTickerOwnership(this: Procedure<Params, AuthorizationRequest>, args: Params): Promise<PostTransactionValue<AuthorizationRequest>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, AuthorizationRequest>, { ticker }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const transferTickerOwnership: () => Procedure<Params, AuthorizationRequest>;
//# sourceMappingURL=transferTickerOwnership.d.ts.map