import { Identity, Procedure } from "../../internal";
import { ProcedureAuthorization } from "../../types/internal";
export interface ModifyCorporateActionsAgentParams {
    /**
     * Identity to be set as Corporate Actions Agent
     */
    target: string | Identity;
    /**
     * date at which the authorization request to modify the Corporate Actions Agent expires (optional, never expires if a date is not provided)
     */
    requestExpiry?: Date;
}
/**
 * @hidden
 */
export declare type Params = {
    ticker: string;
} & ModifyCorporateActionsAgentParams;
/**
 * @hidden
 */
export declare function prepareModifyCorporateActionsAgent(this: Procedure<Params, void>, args: Params): Promise<void>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params>, { ticker }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const modifyCorporateActionsAgent: () => Procedure<Params, void>;
//# sourceMappingURL=modifyCorporateActionsAgent.d.ts.map